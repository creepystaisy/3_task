<!DOCTYPE html>
<html>
    <head>
        
            <!-- Global site tag (gtag.js) - Google Analytics -->
            <script async src="https://www.googletagmanager.com/gtag/js?id=UA-65234733-3"></script>
            <script>
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());

              gtag('config', 'UA-65234733-3');

              
            </script>

            <!-- google AdSense -->
            <script data-ad-client="ca-pub-5884869694377550" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
        <meta name="verification" content="a89500ae673594aa249fe46e413bbe" />

        <meta name="author" content="LegGnom">

        <title>Golang: Выполнение HTTP запросов</title>

        
            <meta name="description" content="Блог о программировании. Python, Flask, PostgreSQL, MongoDB, PHP, JavaScript, Angular, React, Vue. Статьи, примеры программ.">
            <meta property="og:description" content="Блог о программировании. Python, Flask, PostgreSQL, MongoDB, PHP, JavaScript, Angular, React, Vue. Статьи, примеры программ." />
        

        

        <meta name="yandex-verification" content="d872c867276d8c12" />
        <meta name="google-site-verification" content="FISFWHe1hZDLPNC-MRkY4nV0jrEoEyTfMBKviUiNy2g" />
        <meta name="msvalidate.01" content="0767E24C5FE439A333A90758D929CB32" />

        <meta property="og:title" content="Golang: Выполнение HTTP запросов" />


        

        <link rel="stylesheet" href="/static/highlight/styles/atom-one-dark.css?q=1595359497.985594">

        <link href="/feed/rss/" rel="alternate" title="Recent Changes" type="application/atom+xml">

        <link href="https://fonts.googleapis.com/css?family=Lobster|Open+Sans:300,400,700&amp;subset=cyrillic" rel="stylesheet">
        <link rel="stylesheet" href="/static/bundle/style.css?q=1595359497.985594">

        <link rel="shortcut icon" href="/static/favicon.ico?q=1595359497.985594" type="image/x-icon">
        <link rel="icon" href="/static/favicon.ico?q=1595359497.985594" type="image/x-icon">

        
    <link rel="canonical" href="https://dev-gang.ru/article/golang-making-http-requests/" />

    </head>
    <body class="">
        
            

            <div class="base">
                
                    

<div class="header">
    <div class="wrap">
        <a href="/" class="header__name">
            DevGang
        </a>

        <div class="header__category-menu">
            <ul class="header__category-menu_box hidden">
                
                    

                    

                    <li onclick="window.location='/'" data-key="">
                        Все
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=news'" data-key="news">
                        Новости
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=back'" data-key="back">
                        BackEnd
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=front'" data-key="front">
                        FrontEnd
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=mobile'" data-key="mobile">
                        Mobile
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=ops'" data-key="ops">
                        DevOps
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=design'" data-key="design">
                        Дизайн
                    </li>
                
                    

                    
                        
                    

                    <li onclick="window.location='/?category=other'" data-key="other">
                        Остальное
                    </li>
                
            </ul>
            <span class="header__category-menu_current button _small _empty"></span>
        </div>

        <div class="header__auth-box">
            
                <span class="button _link _small js-header__auth">Авторизоваться</span>
                
    

    <div class="modal"
         data-modal-name="auth"
         data-target=".js-header__auth"
         data-init="0">

        <div class="modal__space"></div>
        <div class="modal__content _small">
            
                    <h3>Войти на сайт</h3>

<div class="modal-auth">
    <div class="grid modal-auth__top-line">
        <div class="span-6"><a class="modal-auth__link _vk" href="http://oauth.vk.com/authorize?client_id=6830221&amp;redirect_uri=https://dev-gang.ru/oauth/vk/&amp;response_type=code&amp;scope=email">Вконтакте</a></div>
        <div class="span-6"><a class="modal-auth__link _fb" href="https://www.facebook.com/dialog/oauth?client_id=973809579479822&amp;redirect_uri=https://dev-gang.ru/oauth/fb/&amp;response_type=code&amp;scope=email">Facebook</a></div>
    </div>

    <div class="grid">
        <div class="span-6"><a class="modal-auth__link _gh" href="https://github.com/login/oauth/authorize?client_id=46f1b46c0a471b28ea2c&amp;redirect_uri=https://dev-gang.ru/oauth/github/&amp;scope=user&amp;state=">GitHub</a></div>
        <div class="span-6"><a class="modal-auth__link _gp" href="https://accounts.google.com/o/oauth2/auth?client_id=377190392148-dt5g4gfrqkdgeo2gs4jf5q2rvagjffk3.apps.googleusercontent.com&amp;redirect_uri=https://dev-gang.ru/oauth/gp/&amp;response_type=code&amp;scope=https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile">Google</a></div>
    </div>
</div>
                
        </div>
    </div>

            

        </div>
    </div>
</div>

                    <div class="base__content">
                        <div class="wrap">
                            

    
        <script>
            setTimeout(function () {
                var xhr = new XMLHttpRequest();
                xhr.open( 'POST', '/check-session/', true );
                xhr.send();
            }, 300);
        </script>
    


    <div class="article">
        <div class="grid">
            <div class="span-8">
                <article>

                    <div class="box article__body _block">
                        

                        <div>
                            <div class="article__date">05.07.2018 в 03:46</div>
                            <a href="/user/None/" class="article__author">
                                
                            </a>
                        </div>


                        

                        <h1 class="article__name">Golang: Выполнение HTTP запросов</h1>

                        <div class="article__content">
                            

                            
                                <p>В этом посте мы рассмотрим, как можно делать HTTP-запросы, используя Go. Мы будем использовать пакет net/http, который предоставляет все необходимое для создания HTTP-запросов или создания новых http-серверов. То есть, этот пакет поможет нам сделать все что связано с «http».</p>
                            

                            <div class="js-article-content">
                                
                                    <p>Чтобы проверить, что мы сделали правильные запросы, мы будем использовать <a href="https://httpbin.org/">httpbin</a>, который является хорошим сервисом для тестирования наших запросов на локальных компьютерах.</p>

<h3>Простой HTTP-запрос</h3>

<p>Давайте сделаем очень простой GET запрос и посмотрим, как мы можем прочитать ответ. Мы отправим простой HTTP-запрос GET на <a href="https://httpbin.org/get">https://httpbin.org/get</a> и прочитаем ответ. Для этого мы можем просто импортировать пакет net/http и использовать вызов функции http.Get:</p>

<pre class="prettyprint">
package main

import (
	&quot;net/http&quot;
	&quot;log&quot;
	&quot;io/ioutil&quot;
)

func main() {
	MakeRequest()
}

func MakeRequest() {
	resp, err := http.Get(&quot;https://httpbin.org/get&quot;)
	if err != nil {
		log.Fatalln(err)
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatalln(err)
	}

	log.Println(string(body))
}</pre>

<p>Мы создали отдельную функцию MakeRequest и вызвали ее из нашей основной функции. Внутри этой функции мы передали URL-адрес http.Get и получили два значения - объект ответа и переменную с ошибками, которые могли произойти во время вызова. Мы проверили, есть ли какие-либо ошибки. Если ошибок не было, ошибка будет равна <strong>nil</strong>. Обратите внимание, что эта ошибка будет сообщаться только в том случае, если возникла проблема с подключением к серверу и получением ответа. Однако, если сервер отправляет http ответ 500 (что является внутренней ошибкой сервера), вы получите этот код состояния и сообщение об ошибке на соответствующем объекте, а не в переменной <strong>err</strong>.</p>

<p>Затем мы читаем <strong>resp.Body</strong>, который реализует интерфейс <strong>io.ReadCloser</strong>, и мы можем использовать <strong>ioutil.ReadAll</strong>, чтобы полностью прочитать ответ. Эта функция также возвращает два значения - байтовый срез (<strong>[]byte</strong>) и <strong>err</strong>. Опять же, мы проверяем любые возможные ошибки при чтении тела ответа. Если ошибок не было, мы печатаем тело. Обратите внимание на <strong>string(body)</strong>. Здесь мы преобразуем байтовый срез в строку. Если мы этого не сделаем, log.Println будет распечатывать представление байтового фрагмента, списка всех байтов в этом фрагменте, индивидуально. Но нам нужно строковое представление. Поэтому мы идем вперед и делаем преобразование.</p>

<p>Мы увидим, что напечатанный вывод представляет собой JSON объект в виде строки. Итак, в следующем примере мы увидим, как мы можем отправлять и читать сообщения в формате JSON.</p>

<h3>Отправка и получение запросов в JSON</h3>

<p>Теперь давайте отправим сообщение в формате JSON. Как мы это сделаем? Если вы пришли из Python/Node/Ruby, вы возможно уже использовали для формирования JSON объектов (словари), далее предавали их в свою любимую библиотеку и устанавливали нужный формат передачи данных. Ваша библиотека выполняла для вас преобразование объекта в JSON и отправляла запрос с требуемыми заголовками. В Go, однако, все более явно и меньше магии, что на самом деле хорошо. Вы будете знать, что делаете и как вы это делаете.</p>

<p>В Go мы сначала преобразуем нашу структуру данных в байтовый срез, содержащий JSON-представление данных. Затем мы передаем его запросу с соответствующим типом контента. Давайте посмотрим на пример кода:</p>

<pre class="prettyprint">
func MakeRequest() {

	message := map[string]interface{}{
		&quot;hello&quot;: &quot;world&quot;,
		&quot;life&quot;:  42,
		&quot;embedded&quot;: map[string]string{
			&quot;yes&quot;: &quot;of course!&quot;,
		},
	}

	bytesRepresentation, err := json.Marshal(message)
	if err != nil {
		log.Fatalln(err)
	}

	resp, err := http.Post(&quot;https://httpbin.org/post&quot;, &quot;application/json&quot;, bytes.NewBuffer(bytesRepresentation))
	if err != nil {
		log.Fatalln(err)
	}

	var result map[string]interface{}

	json.NewDecoder(resp.Body).Decode(&amp;result)

	log.Println(result)
	log.Println(result[&quot;data&quot;])
}</pre>

<p>Сначала мы создали <strong>message</strong>, переменная, которая представляет собой карту, содержащую string, int и другую встроенную карту. Затем мы вызвали функцию <strong>json.Marshal</strong> чтобы получить массив []byte из нашей структуры. Далее мы также делаем проверку на ошибки, которые могли возникнуть во время преобразования структуры. Затем мы делаем запрос POST, используя функцию <strong>http.Post</strong>. Мы передаем url, наш тип контента (<strong>application/json</strong>), а затем мы создаем и передаем новый объект <strong>bytes.Buffer</strong> из нашей переменной <strong>bytesRepresentation</strong>. Зачем нам здесь создавать буфер? Функция <strong>http.Post</strong> ожидает реализации io.Reader. Поэтому мы могли бы даже прочитать эту часть с диска или сети. В нашем случае мы можем просто создать буфер байтов, который реализует интерфейс io.Reader. Мы отправляем запрос и проверяем наличие ошибок.</p>

<p>Затем мы объявляем другую переменную <strong>result</strong> (которая также является типом <strong>map</strong>) для хранения результатов, возвращаемых из запроса. Сначала мы могли прочитать полное тело (как и в предыдущем примере), а затем сделать <strong>json.Unmarshal</strong> на нем. Однако, поскольку <strong>resp.Body</strong> возвращает объект <strong>io.Reader</strong>, мы можем просто передать его <strong>json.NewDecoder</strong>, а затем вызвать функцию <strong>Decode</strong> на нем. Помните, мы должны передать указатель на наш объект map, поэтому мы передали переменную как <strong>&amp;result</strong> вместо <strong>result</strong>. Функция Decode также возвращает вторым параметром ошибку. Но мы предполагали, что это не имеет значения и не проверяем ее. Мы зарегистрировали result и result[&quot;data&quot;]. Служба <strong>httpbin</strong> отправляет различную информацию о запросе в качестве ответа.</p>

<ul>
	<li>
	<p>Golang: Выполнение HTTP запросов</p>
	</li>
	<li>
	<p><a href="/article/golang-making-http-requests-2/">Golang: Работы с HTTP запросами часть 2</a></p>
	</li>
	<li>
	<p><a href="/article/golang-making-http-requests-3/">Golang: Работы с HTTP запросами часть 3</a></p>
	</li>
</ul>

                                
                            </div>
                            
    <div class="float-menu hidden" data-selector=".js-article-content">
        <div class="float-menu__content"></div>
        <div class="float-menu__button">
            <img src="/static/icons/menu.svg"/>
            <span>Меню</span>
        </div>
    </div>


                            

                            
                                <a href="/?tag=12">#Golang</a>
                            
                        </div>

                        <div class="box__footer article__meta-box">
                            <div class="article__share">
                                
    <div class="share">
        Поделится публикацией
        <div class="ya-share2 share__box" data-services="vkontakte,facebook,gplus,twitter,telegram" data-counter=""></div>
    </div>

                            </div>
                            


<div class="article-meta">
    <div class="article-meta__item _visits">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488.85 488.85">
	<path d="M244.425,98.725c-93.4,0-178.1,51.1-240.6,134.1c-5.1,6.8-5.1,16.3,0,23.1c62.5,83.1,147.2,134.2,240.6,134.2
		s178.1-51.1,240.6-134.1c5.1-6.8,5.1-16.3,0-23.1C422.525,149.825,337.825,98.725,244.425,98.725z M251.125,347.025
		c-62,3.9-113.2-47.2-109.3-109.3c3.2-51.2,44.7-92.7,95.9-95.9c62-3.9,113.2,47.2,109.3,109.3
		C343.725,302.225,302.225,343.725,251.125,347.025z M248.025,299.625c-33.4,2.1-61-25.4-58.8-58.8c1.7-27.6,24.1-49.9,51.7-51.7
		c33.4-2.1,61,25.4,58.8,58.8C297.925,275.625,275.525,297.925,248.025,299.625z"/>
</svg>
        8641
    </div>

    <div class="article-meta__item _visits">
        <svg viewBox="-21 -47 682.66669 682" xmlns="http://www.w3.org/2000/svg">
    <path d="m552.011719-1.332031h-464.023438c-48.515625 0-87.988281 39.464843-87.988281 87.988281v283.972656c0 48.414063 39.300781 87.816406 87.675781 87.988282v128.863281l185.191407-128.863281h279.144531c48.515625 0 87.988281-39.472657 87.988281-87.988282v-283.972656c0-48.523438-39.472656-87.988281-87.988281-87.988281zm50.488281 371.960937c0 27.835938-22.648438 50.488282-50.488281 50.488282h-290.910157l-135.925781 94.585937v-94.585937h-37.1875c-27.839843 0-50.488281-22.652344-50.488281-50.488282v-283.972656c0-27.84375 22.648438-50.488281 50.488281-50.488281h464.023438c27.839843 0 50.488281 22.644531 50.488281 50.488281zm0 0"/>
    <path d="m171.292969 131.171875h297.414062v37.5h-297.414062zm0 0"/>
    <path d="m171.292969 211.171875h297.414062v37.5h-297.414062zm0 0"/>
    <path d="m171.292969 291.171875h297.414062v37.5h-297.414062zm0 0"/>
</svg>
        0
    </div>

    <div class="article-meta__item">
        

    
    

    <div class="vote ">

        <span class="vote__arrow _down js-header__auth" data-id="20">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 284.929 284.929" width="18px">
  <path d="M282.082 76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856-2.471 0-4.661.95-6.563 2.856L142.466 174.441 30.262 62.241c-1.903-1.906-4.093-2.856-6.567-2.856-2.475 0-4.665.95-6.567 2.856L2.856 76.515C.95 78.417 0 80.607 0 83.082c0 2.473.953 4.663 2.856 6.565l133.043 133.046c1.902 1.903 4.093 2.854 6.567 2.854s4.661-.951 6.562-2.854L282.082 89.647c1.902-1.903 2.847-4.093 2.847-6.565 0-2.475-.945-4.665-2.847-6.571z"/>
</svg>
        </span>

        <span class="js-vote-counter">0</span>

        <span class="vote__arrow _up js-header__auth" data-id="20">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 284.929 284.929" width="18px">
  <path d="M282.082 195.285L149.028 62.24c-1.901-1.903-4.088-2.856-6.562-2.856s-4.665.953-6.567 2.856L2.856 195.285C.95 197.191 0 199.378 0 201.853c0 2.474.953 4.664 2.856 6.566l14.272 14.271c1.903 1.903 4.093 2.854 6.567 2.854s4.664-.951 6.567-2.854l112.204-112.202 112.208 112.209c1.902 1.903 4.093 2.848 6.563 2.848 2.478 0 4.668-.951 6.57-2.848l14.274-14.277c1.902-1.902 2.847-4.093 2.847-6.566.001-2.476-.944-4.666-2.846-6.569z"/>
</svg>
        </span>
    </div>

    </div>
</div>
                        </div>
                    </div>
                </article>

                <div class="box _ads">
                    
                    <!-- DevGang article item -->
                    <ins class="adsbygoogle"
                         style="display:block"
                         data-ad-client="ca-pub-5884869694377550"
                         data-ad-slot="5710776197"
                         data-ad-format="auto"
                         data-full-width-responsive="true"></ins>
                </div>

                <div class="article__comment">
                    
    

    <div class="box ">
        <div class="box__header">
            Комментарии 
            
        </div>
        
        <div class="comment-box">
            <div class="comment-box__list">
                
            </div>

            
                
            
    <div>
        
            Чтобы оставить комментарий, необходимо <a href="#" class="js-header__auth">авторизоваться</a>
        
    </div>

            
        </div>
    </div>

                </div>

                
            </div>
            <div class="span-4">
                <div class="box _block text-center">
    
    <p>Присоединяйся в тусовку</p>

    <div class="social">
    <a href="https://vk.com/devgang" class="social__link _vk" target="_blank">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 511.962 511.962">
	<path d="M507.399,370.471c-1.376-2.304-9.888-20.8-50.848-58.816c-42.88-39.808-37.12-33.344,14.528-102.176
		c31.456-41.92,44.032-67.52,40.096-78.464c-3.744-10.432-26.88-7.68-26.88-7.68l-76.928,0.448c0,0-5.696-0.768-9.952,1.76
		c-4.128,2.496-6.784,8.256-6.784,8.256s-12.192,32.448-28.448,60.032c-34.272,58.208-48,61.28-53.6,57.664
		c-13.024-8.416-9.76-33.856-9.76-51.904c0-56.416,8.544-79.936-16.672-86.016c-8.384-2.016-14.528-3.36-35.936-3.584
		c-27.456-0.288-50.72,0.096-63.872,6.528c-8.768,4.288-15.52,13.856-11.392,14.4c5.088,0.672,16.608,3.104,22.72,11.424
		c7.904,10.72,7.616,34.848,7.616,34.848s4.544,66.4-10.592,74.656c-10.4,5.664-24.64-5.888-55.2-58.72
		c-15.648-27.04-27.488-56.96-27.488-56.96s-2.272-5.568-6.336-8.544c-4.928-3.616-11.84-4.768-11.84-4.768l-73.152,0.448
		c0,0-10.976,0.32-15.008,5.088c-3.584,4.256-0.288,13.024-0.288,13.024s57.28,133.984,122.112,201.536
		c59.488,61.92,127.008,57.856,127.008,57.856h30.592c0,0,9.248-1.024,13.952-6.112c4.352-4.672,4.192-13.44,4.192-13.44
		s-0.608-41.056,18.464-47.104c18.784-5.952,42.912,39.68,68.48,57.248c19.328,13.28,34.016,10.368,34.016,10.368l68.384-0.96
		C488.583,400.807,524.359,398.599,507.399,370.471z"/>
</svg>
    </a>
    <a href="https://www.facebook.com/DevGang-959686350812346" class="social__link _fb" target="_blank">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
	<path d="M288,176v-64c0-17.664,14.336-32,32-32h32V0h-64c-53.024,0-96,42.976-96,96v80h-64v80h64v256h96V256h64l32-80H288z"/>
</svg>
    </a>
    <a href="https://t.me/devgang" class="social__link _tg" target="_blank">
        <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 300 300" style="enable-background:new 0 0 300 300;" xml:space="preserve">
<g id="XMLID_496_">
	<path id="XMLID_497_" d="M5.299,144.645l69.126,25.8l26.756,86.047c1.712,5.511,8.451,7.548,12.924,3.891l38.532-31.412
		c4.039-3.291,9.792-3.455,14.013-0.391l69.498,50.457c4.785,3.478,11.564,0.856,12.764-4.926L299.823,29.22
		c1.31-6.316-4.896-11.585-10.91-9.259L5.218,129.402C-1.783,132.102-1.722,142.014,5.299,144.645z M96.869,156.711l135.098-83.207
		c2.428-1.491,4.926,1.792,2.841,3.726L123.313,180.87c-3.919,3.648-6.447,8.53-7.163,13.829l-3.798,28.146
		c-0.503,3.758-5.782,4.131-6.819,0.494l-14.607-51.325C89.253,166.16,91.691,159.907,96.869,156.711z"/>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>
    </a>
    <a href="/feed/rss/" class="social__link _rss" target="_blank">
        <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 448 448" style="enable-background:new 0 0 448 448;" xml:space="preserve">
<g>
	<g>
		<circle cx="64" cy="384" r="64"/>
	</g>
</g>
<g>
	<g>
		<path d="M0,149.344v85.344c117.632,0,213.344,95.68,213.344,213.312h85.312C298.656,283.328,164.672,149.344,0,149.344z"/>
	</g>
</g>
<g>
	<g>
		<path d="M0,0v85.344C200,85.344,362.688,248,362.688,448H448C448,200.96,247.04,0,0,0z"/>
	</g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>
    </a>
</div>
</div>
                <div class="box _block text-center">
    <p>Поделитесь своим опытом, расскажите о новом инструменте, библиотеке или фреймворке. Для этого не обязательно становится постоянным автором.</p>
    
        <span class="button js-header__auth">Попробовать</span>
    
</div>

                <div class="box _block">
                    <div class="box__header">Возможно вам понравится</div>

                    
                    <div>
                        <a href="/article/czto-luczshe-dlja-vashego-sleduusczego-prilozhenija-angular-ili-react-poczemu-ne-oba-86intxeon8/">Что лучше для вашего следующего приложения - Angular или React? Почему не оба? </a>
                    </div>
                    
                    <div>
                        <a href="/article/clickjacking-chto-eto-i-kak-borotsya/">Clickjacking - что это и как бороться</a>
                    </div>
                    
                    <div>
                        <a href="/article/go-ponjat-dizain-syncpool-cpvecztx8e/">Go: понять дизайн Sync.Pool </a>
                    </div>
                    
                </div>

                <div class="sticky">
                    
    

    
        
    <div class="box _block text-center app-ad" data-path="">
        
            <img src="/static/icons/ad.svg"/>
            <p>В этом месте могла бы быть ваша реклама</p>
            <a href="/ad/" class="button">
                Разместить рекламу
            </a>
        
    </div>

    

    

    

    

                    
    

    

    
        
    <div class="app-ad-link">
        
            <div class="app-ad-link__item app-ad" data-path="867nv">
                <div class="app-ad-link__image">
                    
                        <img src="/static//storage/4630433894475110805661164097922154247.ico"/>
                    
                </div>

                <a href="/s/867nv/" class="app-ad-link__link">Домен с 5% скидкой</a>

                
                    <div class="app-ad-link__description">Зарегистрируйся и получи скидку на первый домен</div>
                
            </div>
        
            <div class="app-ad-link__item app-ad" data-path="25t52">
                <div class="app-ad-link__image">
                    
                        <img src="/static//storage/250511394015149637438227018458787635571.ico"/>
                    
                </div>

                <a href="/s/25t52/" class="app-ad-link__link">25% на первый месяц аренды VPS</a>

                
                    <div class="app-ad-link__description">Виртуальный сервер
по цене обычного хостинга
</div>
                
            </div>
        
    </div>

    

    

                </div>

                
            </div>
        </div>
    </div>

    
    

    


                        </div>
                    </div>

                    <div class="base__footer">
                        <div class="footer">
    <div class="wrap">
        <div class="footer__link">
            <a href="/chpu-translit/">Генератор ЧПУ</a>
            <a href="/doc/">Библиотека переводов</a>
            
        </div>
    </div>

    <div class="footer__meta">
        <div class="wrap">
            <div class="footer__meta-inner">
                <a href="/" class="footer__logo">DevGang</a>

                <div class="footer__support">
                    <div>Служба поддержки</div>
                    <a href="mailto:support@dev-gang.ru">support@dev-gang.ru</a>
                </div>

                <div class="footer__social">
                    <div class="social">
    <a href="https://vk.com/devgang" class="social__link _vk" target="_blank">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 511.962 511.962">
	<path d="M507.399,370.471c-1.376-2.304-9.888-20.8-50.848-58.816c-42.88-39.808-37.12-33.344,14.528-102.176
		c31.456-41.92,44.032-67.52,40.096-78.464c-3.744-10.432-26.88-7.68-26.88-7.68l-76.928,0.448c0,0-5.696-0.768-9.952,1.76
		c-4.128,2.496-6.784,8.256-6.784,8.256s-12.192,32.448-28.448,60.032c-34.272,58.208-48,61.28-53.6,57.664
		c-13.024-8.416-9.76-33.856-9.76-51.904c0-56.416,8.544-79.936-16.672-86.016c-8.384-2.016-14.528-3.36-35.936-3.584
		c-27.456-0.288-50.72,0.096-63.872,6.528c-8.768,4.288-15.52,13.856-11.392,14.4c5.088,0.672,16.608,3.104,22.72,11.424
		c7.904,10.72,7.616,34.848,7.616,34.848s4.544,66.4-10.592,74.656c-10.4,5.664-24.64-5.888-55.2-58.72
		c-15.648-27.04-27.488-56.96-27.488-56.96s-2.272-5.568-6.336-8.544c-4.928-3.616-11.84-4.768-11.84-4.768l-73.152,0.448
		c0,0-10.976,0.32-15.008,5.088c-3.584,4.256-0.288,13.024-0.288,13.024s57.28,133.984,122.112,201.536
		c59.488,61.92,127.008,57.856,127.008,57.856h30.592c0,0,9.248-1.024,13.952-6.112c4.352-4.672,4.192-13.44,4.192-13.44
		s-0.608-41.056,18.464-47.104c18.784-5.952,42.912,39.68,68.48,57.248c19.328,13.28,34.016,10.368,34.016,10.368l68.384-0.96
		C488.583,400.807,524.359,398.599,507.399,370.471z"/>
</svg>
    </a>
    <a href="https://www.facebook.com/DevGang-959686350812346" class="social__link _fb" target="_blank">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
	<path d="M288,176v-64c0-17.664,14.336-32,32-32h32V0h-64c-53.024,0-96,42.976-96,96v80h-64v80h64v256h96V256h64l32-80H288z"/>
</svg>
    </a>
    <a href="https://t.me/devgang" class="social__link _tg" target="_blank">
        <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x=